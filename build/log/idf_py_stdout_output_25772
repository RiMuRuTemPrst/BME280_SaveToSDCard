[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\ESP32_IDF_ESPRESSIF\Projects\BME280_SDcard\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP32_IDF_ESPRESSIF/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/ESP32_IDF_ESPRESSIF/Projects/BME280_SDcard/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/7] Building C object esp-idf/bme280/CMakeFiles/__idf_bme280.dir/bme.c.obj
[3/7] Linking C static library esp-idf\bme280\libbme280.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable main.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/ESP32_IDF_ESPRESSIF/Projects/BME280_SDcard/build/main.bin
[7/7] cmd.exe /C "cd /D D:\ESP32_IDF_ESPRESSIF\Projects\BME280_SDcard\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP32_IDF_ESPRESSIF/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/ESP32_IDF_ESPRESSIF/Projects/BME280_SDcard/build/partition_table/partition-table.bin D:/ESP32_IDF_ESPRESSIF/Projects/BME280_SDcard/build/main.bin"
main.bin binary size 0x411e0 bytes. Smallest app partition is 0x100000 bytes. 0xbee20 bytes (75%) free.
